<?xml version="1.0"?>

<build subject="config" stage="04" chroot="yes">

	<phase seq="1">
	
	    <entry type="script/bash" seq="1">
	    	<action when="after" seq="1">
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/systemd/network/10-eth0-static.network &lt;&lt;-EOF
					[Match]
					Name=eth0
					
					[Network]
					Address=192.168.0.2/24
					Gateway=192.168.0.1
					DNS=192.168.0.1
					Domains=
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/systemd/network/10-eth0-dhcp.network &lt;&lt;-EOF
					[Match]
					Name=eth0
					
					[Network]
					DHCP=ipv4
					
					[DHCP]
					UseDomains=true
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/hostname &lt;&lt;-EOF
					$PROJECT__HOSTNAME
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/hosts &lt;&lt;-EOF
					127.0.0.1 localhost
					127.0.0.1 $PROJECT__HOSTNAME
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/root/.bashrc &lt;&lt;-EOF
					export PS1="\e[31m$(whoami)@$(hostname):$(pwd)\$ \e[39m"
					export PATH=/usr/bin:/usr/sbin:/bin:/sbin
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/udev/rules.d/83-duplicate_devs.rules &lt;&lt;-EOF
					# Persistent symlinks for webcam and tuner
					KERNEL=="video*", ATTRS{idProduct}=="1910", ATTRS{idVendor}=="0d81", SYMLINK+="webcam"
					KERNEL=="video*", ATTRS{device}=="0x036f", ATTRS{vendor}=="0x109e", SYMLINK+="tvtuner"
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/adjtime &lt;&lt;-EOF
					0.0 0 0.0
					0
					LOCAL
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/vconsole.conf &lt;&lt;-EOF
					KEYMAP=de-latin1
					FONT=Lat2-Terminus16
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/locale.conf &lt;&lt;-EOF
					LANG=en_US.UTF-8
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/inputrc &lt;&lt;-EOF
					# Begin /etc/inputrc
					set horizontal-scroll-mode Off
					# Enable 8bit input
					set meta-flag On
					set input-meta On
					# Turns off 8th bit stripping
					set convert-meta Off
					# Keep the 8th bit for display
					set output-meta On
					# none, visible or audible
					set bell-style none
					# All of the following map the escape sequence of the value
					# contained in the 1st argument to the readline specific functions
					"\eOd": backward-word
					"\eOc": forward-word
					# for linux console
					"\e[1~": beginning-of-line
					"\e[4~": end-of-line
					"\e[5~": beginning-of-history
					"\e[6~": end-of-history
					"\e[3~": delete-char
					"\e[2~": quoted-insert
					# for xterm
					"\eOH": beginning-of-line
					"\eOF": end-of-line
					# for Konsole
					"\e[H": beginning-of-line
					"\e[F": end-of-line
					# End /etc/inputrc
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/shells &lt;&lt;-EOF
					# Begin /etc/shells
					/bin/sh
					/bin/bash
					# End /etc/shells
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/bootscript.sh &lt;&lt;-EOF
					#!/bin/sh

					dmesg -n 1
					mount -t devtmpfs none /dev
					mount -t proc none /proc
					mount -t sysfs none /sys

					for DEVICE in /sys/class/net/* ; do
						ip link set \${DEVICE##*/} up
						[ \${DEVICE##*/} != lo ] &amp;&amp; udhcpc -b -i \${DEVICE##*/} -s /etc/rc.dhcp
					done
					EOF
				</line>
				<line>chmod +x $PROJECT__RFS/etc/bootscript.sh</line>

				<line verbos="yes">install -v -m755 -d $PROJECT__RFS/etc/modprobe.d</line>				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/modprobe.d/usb.conf &lt;&lt; "EOF"
					# Begin /etc/modprobe.d/usb.conf

					install ohci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i ohci_hcd ; true
					install uhci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i uhci_hcd ; true

					# End /etc/modprobe.d/usb.conf
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/fstab &lt;&lt;-EOF
					# file    system    mount-point    type    options    dump    fsck    order
					aufs / aufs default 0 0
					proc /proc proc default 0 0
					sysfs /sys sysfs default 0 0
					devpts /dev/pts devpts gid=5,mode=620 0 0
					tmpfs /dev/shm tmpfs default 0 0
					usbfs  /proc/bus/usb  usbfs  devgid=14,devmode=0660  0  0
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/rc.dhcp &lt;&lt;-EOF
					#!/bin/sh

					ip addr add \$ip/\$mask dev \$interface

					if [ "\$router" ]; then
						ip route add default via \$router dev \$interface
					fi
					EOF
				</line>
				<line>chmod +x $PROJECT__RFS/etc/rc.dhcp</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/resolv.conf &lt;&lt;-EOF
					nameserver 8.8.8.8
					nameserver 8.8.4.4
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/inittab &lt;&lt;-EOF
					::sysinit:/etc/bootscript.sh
					::restart:/sbin/init
					::ctrlaltdel:/sbin/reboot
					::once:cat /etc/welcome
					::respawn:/bin/cttyhack /bin/sh
					tty2::once:cat /etc/welcome
					tty2::respawn:/bin/sh
					tty3::once:cat /etc/welcome
					tty3::respawn:/bin/sh
					tty4::once:cat /etc/welcome
					tty4::respawn:/bin/sh
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT__RFS/etc/dircolors &lt;&lt;-EOF
					# Configuration file for the color ls utility
					#
					# This file goes in the /etc directory, and must be world readable.
					# You can copy this file to .dir_colors in your $HOME directory to override
					# the system defaults.

					# COLOR needs one of these arguments: 'tty' colorizes output to ttys, but not
					# pipes. 'all' adds color characters to all output. 'none' shuts colorization
					# off.
					COLOR tty

					# Extra command line options for ls go here.
					# Basically these ones are:
					#  -F = show '/' for dirs, '*' for executables, etc.
					#  -T 0 = don't trust tab spacing when formatting ls output.
					OPTIONS -F -T 0

					# Below, there should be one TERM entry for each termtype that is colorizable
					TERM linux
					TERM linux-c
					TERM console
					TERM con132x25
					TERM con132x30
					TERM con132x43
					TERM con132x60
					TERM con80x25
					TERM con80x28
					TERM con80x30
					TERM con80x43
					TERM con80x50
					TERM con80x60
					TERM gnome
					TERM mach-color
					TERM rxvt
					TERM rxvt-unicode
					TERM screen
					TERM screen-w
					TERM screen-256color
					TERM vt100
					TERM vt102
					TERM xterm
					TERM xterm-debian
					TERM xterm-256color
					TERM iterm

					# EIGHTBIT, followed by '1' for on, '0' for off. (8-bit output)
					EIGHTBIT 1

					# Below are the color init strings for the basic file types. A color init
					# string consists of one or more of the following numeric codes:
					#
					# Attribute codes:
					# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed
					# Text color codes:
					# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white
					# Background color codes:
					# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white

					NORMAL 00       # global default, although everything should be something.
					FILE   00       # normal file
					DIR    01;34    # directory
					LINK   00;36    # symbolic link
					FIFO   40;33    # pipe
					SOCK   01;35    # socket
					DOOR   01;35    # door
					BLK    40;33;01 # block device driver
					CHR    40;33;01 # character device driver
					ORPHAN 41;33;01 # symlink to nonexistent file

					# This is for files with execute permission:
					EXEC 00;32

					# List any file extensions like '.gz' or '.tar' that you would like ls
					# to colorize below. Put the extension, a space, and the color init string.
					# (and any comments you want to add after a '#')

					# executables (bright green)
					.cmd  00;32
					.exe  01;32
					.com  01;32
					.bat  01;32
					.btm  01;32
					.dll  01;32

					# archives or compressed
					.tar  00;31
					.tbz  00;31
					.tgz  00;31
					.rpm  00;31
					.deb  00;31
					.arj  00;31
					.taz  00;31
					.lzh  00;31
					.lzma 00;31
					.zip  00;31
					.zoo  00;31
					.z    00;31
					.Z    00;31
					.gz   00;31
					.bz2  00;31
					.tb2  00;31
					.tz2  00;31
					.tbz2 00;31
					.xz   00;31

					# image formats
					.avi  01;35
					.bmp  01;35
					.fli  01;35
					.gif  01;35
					.jpg  01;35
					.jpeg 01;35
					.mng  01;35
					.mov  01;35
					.mpg  01;35
					.pcx  01;35
					.pbm  01;35
					.pgm  01;35
					.png  01;35
					.ppm  01;35
					.tga  01;35
					.tif  01;35
					.xbm  01;35
					.xpm  01;35
					.dl   01;35
					.gl   01;35
					.wmv  01;35

					# sound formats
					.aiff 00;32
					.au   00;32
					.mid  00;32
					.mp3  00;32
					.ogg  00;32
					.voc  00;32
					.wav  00;32
					EOF
				</line>
				
				<line verbos="yes">
					cat > $PROJECT_RFS/etc/os-release &lt;&lt;-EOF
					NAME="$PROJECT__NAME"
					VERSION="$PROJECT__VERSION"
					ID=$PROJECT__NAME
					PRETTY_NAME="$PROJECT__NAME $PROJECT__VERSION-systemd"
					VERSION_CODENAME="$PROJECT__CODENAME"
					
					EOF
            	</line>
            	
				<line verbos="yes">echo $PROJECT__VERSION-systemd > /etc/$PROJECT__NAME-release</line>
            	
				<line verbos="yes">
		        	cat > $PROJECT_RFS/etc/lsb-release &lt;&lt;-EOF
					DISTRIB_ID="$PROJECT__NAME"
					DISTRIB_RELEASE="$PROJECT__VERSION-systemd"
					DISTRIB_CODENAME="$PROJECT__CODENAME"
					DISTRIB_DESCRIPTION="$PROJECT__NAME"
					
					EOF
				</line>

				<line verbos="yes">
					cat > $PROJECT_RFS/etc/welcome &lt;&lt;-EOF
					#####################################################################
					Welcome to $PROJECT__NAME-$PROJECT__VERSION ($PROJECT__ARCH)
					
					Author: 
					    $PROJECT__AUTHOR_NAME
					    $PROJECT__AUTHOR_EMAIL
					
					Website:
					    $PROJECT__WEBSITE
					#####################################################################
					
					EOF
                </line>
                
				<line verbos="yes">
					cat > $PROJECT_RFS/etc/profile &lt;&lt;-EOF
					# Begin /etc/profile
					
					# Functions to help us manage paths.  Second argument is the name of the
					# path variable to be modified (default: PATH)
					
					pathremove () {
						local IFS=':'
						local NEWPATH
						local DIR
						local PATHVARIABLE=${2:-PATH}
						for DIR in ${!PATHVARIABLE} ; do
								if [ "$DIR" != "$1" ] ; then
								  NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
								fi
						done
						export $PATHVARIABLE="$NEWPATH"
					}

					pathprepend () {
						pathremove $1 $2
						local PATHVARIABLE=${2:-PATH}
						export $PATHVARIABLE="$1${!PATHVARIABLE:+:${!PATHVARIABLE}}"
					}

					pathappend () {
						pathremove $1 $2
						local PATHVARIABLE=${2:-PATH}
						export $PATHVARIABLE="${!PATHVARIABLE:+${!PATHVARIABLE}:}$1"
					}


					# Set the initial path
					export PATH=/bin:/usr/bin

					if [[ $EUID -eq 0 ]] ; then
						pathappend /sbin:/usr/sbin
						unset HISTFILE
					fi

					# Setup some environment variables.
					export HISTSIZE=1000
					export HISTIGNORE="&amp;:[bf]g:exit"

					# Setup a red prompt for root and a green one for users.
					NORMAL="\[\e[0m\]"
					RED="\[\e[1;31m\]"
					GREEN="\[\e[1;32m\]"
					if [[ $EUID == 0 ]] ; then
						PS1="$RED\u [ $NORMAL\w$RED ]# $NORMAL"
					else
						PS1="$GREEN\u [ $NORMAL\w$GREEN ]\$ $NORMAL"
					fi

					for script in /etc/profile.d/*.sh ; do
						if [[ -r $script ]] ; then
							. $script
						fi
					done

					# Now to clean up
					unset pathremove pathprepend pathappend

					# End /etc/profile
					EOF
                </line>
                
                <line verbos="yes">mkdir -vp $PROJECT_RFS/etc/profile.d</line>
				<line verbos="yes">
					cat > $PROJECT_RFS/etc/profile.d/dircolors.sh &lt;&lt;-EOF
					# Setup for /bin/ls to support color, the alias is in /etc/bashrc.
					if [[ -f "/etc/dircolors" ]] ; then
						eval $(dircolors -b /etc/dircolors)

						if [[ -f "$HOME/.dircolors" ]] ; then
							eval $(dircolors -b $HOME/.dircolors)
						fi
					fi
					alias ls='ls --color=auto'
					EOF
                </line>
                
				<line verbos="yes">
					cat > $PROJECT_RFS/etc/profile.d/extrapaths.sh &lt;&lt;-EOF
					if [[ -d /usr/local/lib/pkgconfig ]] ; then
							pathappend /usr/local/lib/pkgconfig PKG_CONFIG_PATH
					fi
					if [[ -d /usr/local/bin ]]; then
							pathprepend /usr/local/bin
					fi
					if [[ -d /usr/local/sbin -a $EUID -eq 0 ]]; then
							pathprepend /usr/local/sbin
					fi

					if [[ -d ~/bin ]]; then
							pathprepend ~/bin
					fi
					#if [[ $EUID -gt 99 ]]; then
					#        pathappend .
					#fi
					EOF
                </line>
                
				<line verbos="yes">
					cat > $PROJECT_RFS/etc/profile.d/readline.sh &lt;&lt;-EOF
					# Setup the INPUTRC environment variable.
					if [[ -z "$INPUTRC" -a ! -f "$HOME/.inputrc" ]] ; then
						INPUTRC=/etc/inputrc
					fi
					export INPUTRC
					EOF
                </line>
                
				<line verbos="yes">
					cat > $PROJECT_RFS/etc/profile.d/umask.sh &lt;&lt;-EOF
					# By default we want the umask to get set.
					if [[ "$(id -gn)" = "$(id -un)" -a $EUID -gt 99 ]] ; then
						umask 002
					else
						umask 022
					fi
					EOF
                </line>
                
				<line verbos="yes">
					cat > $PROJECT_RFS/etc/profile.d/X.sh &lt;&lt;-EOF
					if [[ -x /usr/X11R6/bin/X ]]; then
						pathappend /usr/X11R6/bin
					fi
					if [[ -d /usr/X11R6/lib/pkgconfig ]]; then
						pathappend /usr/X11R6/lib/pkgconfig PKG_CONFIG_PATH
					fi
					EOF
                </line>
                
                <line verbos="yes">
		            cat > $PROJECT_RFS/etc/profile.d/i18n.sh &lt;&lt;-EOF
					# Set up i18n variables
					export LANG=en_US.UTF-8
					EOF
                </line>
                
                <line verbos="yes">
					cat > $PROJECT_RFS/etc/bashrc &lt;&lt;-EOF
					# Begin /etc/bashrc
					# Written for Beyond Linux From Scratch

					# System wide aliases and functions.

					# System wide environment variables and startup programs should go into
					# /etc/profile.  Personal environment variables and startup programs
					# should go into ~/.bash_profile.  Personal aliases and functions should
					# go into ~/.bashrc

					# Provides a colored /bin/ls command.  Used in conjunction with code in
					# /etc/profile.

					alias ls='ls --color=auto'

					# Provides prompt for non-login shells, specifically shells started
					# in the X environment. [Review the LFS archive thread titled
					# PS1 Environment Variable for a great case study behind this script
					# addendum.]

					NORMAL="\[\e[0m\]"
					RED="\[\e[1;31m\]"
					GREEN="\[\e[1;32m\]"
					if [[ $EUID == 0 ]] ; then
					  PS1="$RED\u [ $NORMAL\w$RED ]# $NORMAL"
					else
					  PS1="$GREEN\u [ $NORMAL\w$GREEN ]\$ $NORMAL"
					fi

					# End /etc/bashrc
					EOF
                </line>
                
                <line verbos="yes">
					cat > $PROJECT_RFS/root/.bash_profile &lt;&lt;-EOF
					# Begin ~/.bash_profile

					# Personal environment variables and startup programs.

					# Personal aliases and functions should go in ~/.bashrc.  System wide
					# environment variables and startup programs are in /etc/profile.
					# System wide aliases and functions are in /etc/bashrc.

					append () {
					  # First remove the directory
					  local IFS=':'
					  local NEWPATH
					  for DIR in $PATH; do
						 if [ "$DIR" != "$1" ]; then
						   NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
						 fi
					  done

					  # Then append the directory
					  export PATH=$NEWPATH:$1
					}

					if [ -f "$HOME/.bashrc" ] ; then
					  source $HOME/.bashrc
					fi

					if [ -d "$HOME/bin" ] ; then
					  append $HOME/bin
					fi

					unset append

					# End ~/.bash_profile
					EOF
                </line>
                
                <line verbos="yes">
					cat > $PROJECT_RFS/root/.bashrc &lt;&lt;-EOF
					# Begin ~/.bashrc

					if [ -f "/etc/bashrc" ] ; then
					  source /etc/bashrc
					fi

					# End ~/.bashrc
					EOF

                </line>
                
                <line verbos="yes">
		            cat > $PROJECT_RFS/root/.bash_logout &lt;&lt;-EOF
					# Begin ~/.bash_logout

					# Personal items to perform on logout.

					# End ~/.bash_logout
					EOF
                </line>
                
			</action>
		</entry>
		
	</phase>
	
</build>

