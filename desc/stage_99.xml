<?xml version="1.0"?>

<build subject="packing" stage="99" runbysudo="yes">

	<phase seq="1">
	
		<entry type="script/bash" seq="1">
	            <action when="after" seq="1">
	                <line>echo -e "\n\nPackaging root filesystem...\n"</line>
	                
	                <line>echo "" > $PROJECT__RFS/root/.bash_history</line>
	                
	                <line>rm -rf $PROJECT__ISODIR</line>
	                <line>mkdir -vp $PROJECT__ISODIR</line>
	                
	                <line>cd $PROJECT__RFS</line>
	                
	                <line>find . -not -path "./builder.sh" -not -path "./README.md" -not -path "./LICENSE" -not -path "./assets*" -not -path "./build*" -not -path "./tools*" -not -path "./iso*" -not -path "./packages*" -not -path "./desc*" -not -path "./scripts*" | cpio -R root:root -H newc -o | gzip > $PROJECT__ISODIR/rootfs.gz</line>
	                <line disabled="yes">find . -not -path "./builder.sh" -not -path "./README.md" -not -path "./LICENSE" -not -path "./assets*" -not -path "./build*" -not -path "./tools*" -not -path "./iso*" -not -path "./packages*" -not -path "./desc*" -not -path "./scripts*" | cpio -R root:root -H newc -o | lzma -7 > $PROJECT__ISODIR/rootfs.lz</line>
   	            </action>
	            
	            <action when="after" seq="2">
					<line>echo -e "\n\nMaking bootable iso file...\n"</line>
					
					<line>cd $PROJECT__ISODIR</line>
					<line>
						for i in lib lib64 share end ; do
							if [ -f /usr/$i/syslinux/isolinux.bin ]; then
								cp /usr/$i/syslinux/isolinux.bin .
								
								if [ -f /usr/$i/syslinux/ldlinux.c32 ]; then
									cp /usr/$i/syslinux/ldlinux.c32 .
								fi;
								
								if [ -f /usr/$i/syslinux/vesamenu.c32 ]; then
									cp /usr/$i/syslinux/vesamenu.c32 .
								fi;
								break;
							fi;
							if [ $i = end ]; then echo 'syslinux not found.'; exit 1; fi;
						done
					</line>
					
					<line>cp $PROJECT__RFS/boot/kernel.bz ./kernel.bz</line>
					
					<line>cp $PROJECT__AST/splash.png ./splash.png</line>
					
					<line disabled="yes">echo 'default kernel.bz initrd=rootfs.gz' > ./isolinux.cfg</line>
					<line disabled="yes">echo 'default kernel.bz initrd=rootfs.lz' > ./isolinux.cfg</line>
					
					<line>
						cat > ./boot.msg &lt;&lt;-EOF
						This is the official Ghoghnoos LiveCD, Version: $PROJECT__ARCH-$PROJECT__VERSION
						EOF
					</line>
					
					<line>
						cat > ./isolinux.cfg &lt;&lt;-EOF
						default vesamenu.c32
						timeout 600

						display boot.msg

						# Clear the screen when exiting the menu, instead of leaving the menu displayed.
						# For vesamenu, this means the graphical background is still displayed without
						# the menu itself for as long as the screen remains in graphics mode.
						
						menu clear
						
						menu background splash.png
						menu title Ghoghnoos Linux 0.0.1
						menu vshift 8
						menu rows 18
						menu margin 9
						#menu hidden
						menu helpmsgrow 15
						menu tabmsgrow 14
						
						# Border Area
						menu color border * #00000000 #00000000 none
						
						# Selected item
						menu color sel 0 #ffffffff #00000000 none
						
						# Title bar
						menu color title 0 #ff7ba3d0 #00000000 none
						
						# Press [Tab] message
						menu color tabmsg 0 #ff3a6496 #00000000 none
						
						# Unselected menu item
						menu color unsel 0 #84b8ffff #00000000 none
						
						# Selected hotkey
						menu color hotsel 0 #84b8ffff #00000000 none
						
						# Unselected hotkey
						menu color hotkey 0 #ffffffff #00000000 none
						
						# Help text
						menu color help 0 #ffffffff #00000000 none
						
						# A scrollbar of some type
						menu color scrollbar 0 #ffffffff #ff355594 none
						
						# Timeout msg
						menu color timeout 0 #ffffffff #00000000 none
						menu color timeout_msg 0 #ffffffff #00000000 none
						
						# Command prompt text
						menu color cmdmark 0 #84b8ffff #00000000 none
						menu color cmdline 0 #ffffffff #00000000 none
						
						# Do not display the actual menu unless the user presses a key. All that is displayed is a timeout message.
						
						menu tabmsg Press Tab for full configuration options on menu items.
						
						menu separator # insert an empty line
						menu separator # insert an empty line
						
						label local
						  menu label ^Boot from hard disk
						  localboot 0xffff
						
						menu separator # insert an empty line
						
						label linux
						  menu label ^Install Ghoghnoos 0.0.1
						  kernel kernel.bz
						  append initrd=rootfs.gz
						  
						label livecd
						  menu label ^Try live Ghoghnoos 0.0.1
						  menu default
						  kernel kernel.bz
						  append initrd=rootfs.gz
						  
						menu separator # insert an empty line
						
						label check
						  menu label ^Check this installation media
						  kernel kernel.bz
						  append initrd=rootfs.gz inst.stage2=hd:LABEL=CentOS\x207\x20x86_64 rd.live.check quiet
						
						label memtest
						  menu label ^Memory Test
						  kernel kernel.bz memtest
						  append initrd=rootfs.gz inst.stage2=hd:LABEL=CentOS\x207\x20x86_64 rd.live.check quiet
						  
						EOF
					</line>
					
					<line>genisoimage -J -r -o $PROJECT__ISODIR/$PROJECT__ISONAME -b isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table ./</line>
					<line>isohybrid $PROJECT__ISODIR/$PROJECT__ISONAME 2>/dev/null || true</line>
					
					<line>echo -e "\n\n$PROJECT__NAME-$PROJECT__VERSION iso file is created in\n$PROJECT__ISODIR/$PROJECT__ISONAME\n"</line>
	            </action>
       		</entry>
				
	</phase>
	
</build>

