<?xml version="1.0"?>

<build name="minux" type="live" arch="x86_64" version="0.0.2" subject="base" in-chroot="yes" codename="robin">

	<phase seq="1" comment="Base system">
	
		<entry name="linux-4.4.6" type="package/src" seq="1" cdto="yes" download="yes" extract="yes">
			<link>https://www.kernel.org/pub/linux/kernel/v4.x/linux-4.4.6.tar.xz</link>
			<filename>linux-4.4.6.tar.xz</filename>
			<version>4.4.6</version>
			<checksum type="md5">efc822dad2149e40cc908718a4fea1d3</checksum>
			<action when="after" seq="1">
				<line verbos="yes">make mrproper</line>
				<line verbos="yes">make defconfig</line>
				<line>sed -i "s/.*CONFIG_DEFAULT_HOSTNAME.*/CONFIG_DEFAULT_HOSTNAME=\"$PROJECT__NAME\"/" .config</line>
				<line verbos="yes">make bzImage</line>
				<line verbos="yes">make headers_install</line>
			</action>
		</entry>
		
		<entry name="glibc-2.24" type="package/src" seq="2" cdto="yes" download="yes" extract="yes">
			<link>http://ftp.gnu.org/gnu/glibc/glibc-2.24.tar.xz</link>
			<filename>glibc-2.24.tar.xz</filename>
			<version>2.24</version>
			<checksum type="md5">97dc5517f92016f3d70d83e3162ad318</checksum>
			<action when="after" seq="1">
				<line>mkdir ./glibc_objects</line>
				<line>mkdir ./glibc_installed</line>
				<line>GLIBC_INSTALLED=$(pwd)/glibc_installed</line>
				<line>cd ./glibc_objects</line>
				<line verbos="yes">../configure --prefix= --with-headers=$PROJECT__BLD/linux-4.4.6/usr/include --disable-werror</line>
				<line verbos="yes">make</line>
				<line verbos="yes">make install DESTDIR=$GLIBC_INSTALLED</line>
				
				<line>mkdir -vp $PROJECT__RFS/lib</line>
				
				<line>cp $GLIBC_INSTALLED/lib/ld-linux* $PROJECT__RFS/lib</line>
				<line>cp $GLIBC_INSTALLED/lib/libm.so.6 $PROJECT__RFS/lib</line>
				<line>cp $GLIBC_INSTALLED/lib/libc.so.6 $PROJECT__RFS/lib</line>
				<line>cp $GLIBC_INSTALLED/lib/libresolv.so.2 $PROJECT__RFS/lib</line>
				<line>cp $GLIBC_INSTALLED/lib/libnss_dns.so.2 $PROJECT__RFS/lib</line>
			</action>
		</entry>
		
		<entry name="busybox-1.24.2" type="package/src" seq="3" cdto="yes" download="yes" extract="yes">
			<link>http://busybox.net/downloads/busybox-1.24.2.tar.bz2</link>
			<filename>busybox-1.24.2.tar.bz2</filename>
			<version>1.24.2</version>
			<checksum type="md5">2eaae519cac1143bcf583636a745381f</checksum>
			<action when="after" seq="1">
				<line verbos="yes">make distclean</line>
				<line verbos="yes">make defconfig</line>
				<line>#GLIBC_INSTALLED=$(realpath "$PROJECT__BLD/glibc-2.23/glibc_installed")</line>
				<line>#GLIBC_INSTALLED_ESC=$(echo \"$GLIBC_INSTALLED\" | sed 's/\//\\\//g')</line>
				<line verbos="yes">#sed -i "s/.*CONFIG_SYSROOT.*/CONFIG_SYSROOT=$GLIBC_INSTALLED/" .config</line>
				<line verbos="yes">sed -i "s/.*CONFIG_INETD.*/CONFIG_INETD=n/" .config</line>
				<line verbos="yes">make busybox</line>
				<line verbos="yes">make install</line>
				
				<line>cp -R _install/* $PROJECT__RFS</line>
				<line>rm -f $PROJECT__RFS/linuxrc</line>
			</action>
		</entry>
	</phase>
	
	
	<phase seq="2" comment="Root file system">
		<entry type="script/bash" seq="1" cdto="no" download="no" extract="no">
			<action when="after" seq="1">
				<line>echo -e "\n\nCreating root filesystem...\n"</line>

				<line>GLIBC_INSTALLED="$PROJECT__BLD/glibc-2.23/glibc_installed"</line>

				<line>mkdir -v -p $PROJECT__RFS/boot</line>
				<line>mkdir -v -p $PROJECT__RFS/dev</line>
				<line>mkdir -v -p $PROJECT__RFS/etc</line>
				<line>mkdir -v -p $PROJECT__RFS/lib</line>
				<line>mkdir -v -p $PROJECT__RFS/srv</line>
				<line>mkdir -v -p $PROJECT__RFS/proc</line>
				<line>mkdir -v -p $PROJECT__RFS/root</line>
				<line>mkdir -v -p $PROJECT__RFS/home</line>
				<line>mkdir -v -p $PROJECT__RFS/sys</line>
				<line>mkdir -v -p $PROJECT__RFS/mnt</line>
				<line>mkdir -v -p $PROJECT__RFS/media</line>
				<line>mkdir -v -p $PROJECT__RFS/opt</line>
				<line>mkdir -v -p $PROJECT__RFS/tmp</line>

				<line>chmod 1777 $PROJECT__RFS/tmp</line>

				<line>
					cat > $PROJECT__RFS/etc/bootscript.sh &lt;&lt;-EOF
					#!/bin/sh

					dmesg -n 1
					mount -t devtmpfs none /dev
					mount -t proc none /proc
					mount -t sysfs none /sys

					for DEVICE in /sys/class/net/* ; do
						ip link set \${DEVICE##*/} up
						[ \${DEVICE##*/} != lo ] &amp;&amp; udhcpc -b -i \${DEVICE##*/} -s /etc/rc.dhcp
					done

					EOF
				</line>
				<line>chmod +x $PROJECT__RFS/etc/bootscript.sh</line>

				<line>
					cat > $PROJECT__RFS/etc/rc.dhcp &lt;&lt;-EOF
					#!/bin/sh

					ip addr add \$ip/\$mask dev \$interface

					if [ "\$router" ]; then
						ip route add default via \$router dev \$interface
					fi

					EOF
				</line>
				<line>chmod +x $PROJECT__RFS/etc/rc.dhcp</line>

				<line>
					cat > $PROJECT__RFS/etc/resolv.conf &lt;&lt;-EOF
					nameserver 8.8.8.8
					nameserver 8.8.4.4

					EOF
				</line>
				<line>
					cat > $PROJECT__RFS/etc/welcome.txt &lt;&lt;-EOF
					##############################################################
					Welcome to $PROJECT__NAME-$PROJECT__VERSION ($PROJECT__ARCH)

					Author: 
					    $PROJECT__AUTHOR_NAME
					    $PROJECT__AUTHOR_EMAIL

					Website:
					    $PROJECT__WEBSITE
					##############################################################

					EOF
				</line>

				<line>
					cat > $PROJECT__RFS/etc/inittab &lt;&lt;-EOF
					::sysinit:/etc/bootscript.sh
					::restart:/sbin/init
					::ctrlaltdel:/sbin/reboot
					::once:cat /etc/welcome.txt
					::respawn:/bin/cttyhack /bin/sh
					tty2::once:cat /etc/welcome.txt
					tty2::respawn:/bin/sh
					tty3::once:cat /etc/welcome.txt
					tty3::respawn:/bin/sh
					tty4::once:cat /etc/welcome.txt
					tty4::respawn:/bin/sh

					EOF
				</line>

				<line>
					cat > $PROJECT__RFS/etc/passwd &lt;&lt;-EOF
					root:x:0:0:root:/root:/bin/sh
					bin:x:1:1:bin:/dev/null:/bin/false
					daemon:x:6:6:Daemon User:/dev/null:/bin/false
					messagebus:x:18:18:D-Bus Message Daemon User:/var/run/dbus:/bin/false
					nobody:x:99:99:Unprivileged User:/dev/null:/bin/false

					EOF
				</line>

				<line>
					cat > $PROJECT__RFS/etc/group &lt;&lt;-EOF
					root:x:0:
					bin:x:1:daemon
					sys:x:2:
					kmem:x:3:
					tape:x:4:
					tty:x:5:
					daemon:x:6:
					floppy:x:7:
					disk:x:8:
					lp:x:9:
					dialout:x:10:
					audio:x:11:
					video:x:12:
					utmp:x:13:
					usb:x:14:
					cdrom:x:15:
					adm:x:16:
					messagebus:x:18:
					systemd-journal:x:23:
					input:x:24:
					mail:x:34:
					nogroup:x:99:
					users:x:999:

					EOF
				</line>

				<line>
					cat > $PROJECT__RFS/etc/hostname &lt;&lt;-EOF
					$PROJECT__HOSTNAME

					EOF
				</line>

				<line>
					cat > $PROJECT__RFS/etc/hosts &lt;&lt;-EOF
					127.0.0.1 localhost
					127.0.0.1 $PROJECT__HOSTNAME

					EOF
				</line>

				<line>
					cat > $PROJECT__RFS/root/.bash_profile &lt;&lt;-EOF
					exec env -i HOME=/root TERM=$TERM PS1="\e[31m$(whoami)@$(hostname):$(pwd)\$ \e[39m" /bin/sh

					EOF
				</line>

				<line>
					cat > $PROJECT__RFS/root/.bashrc &lt;&lt;-EOF
					export PS1="\e[31m$(whoami)@$(hostname):$(pwd)\$ \e[39m"
					export PATH=/usr/bin:/usr/sbin:/bin:/sbin

					EOF
				</line>

				<line>
					cat > $PROJECT__RFS/init &lt;&lt;-EOF
					#!/bin/sh

					exec /sbin/init

					EOF
				</line>
				<line>chmod +x $PROJECT__RFS/init</line>

				<line>cd $PROJECT__RFS</line>
				<line>rm -f ./lib64</line>
				<line>ln -s ./lib ./lib64</line>
			</action>
		</entry>
	</phase>
	
	
	<phase seq="3" comment="Desktop">
		<entry name="xfce-4.12" type="package/src" seq="3" cdto="yes" download="yes" extract="yes">
			<link>http://mirror.netcologne.de/xfce/xfce/4.12/fat_tarballs/xfce-4.12.tar.bz2</link>
			<filename>xfce-4.12.tar.bz2</filename>
			<version>4.12</version>
			<directory>$PROJECT__BLD/xfce-4.12</directory>
			<checksum type="md5">d50e006b7260cafd5d4859d2388c11e5</checksum>
			<action when="after" seq="1">
				<line>export PKG_CONFIG_PATH="$PROJECT__RFS/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"</line>
				
				<line verbos="yes">tar -xf libxfce4util-4.12.1.tar.bz2 &amp;&amp; cd ./libxfce4util-4.12.1</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf xfce4-dev-tools-4.12.0.tar.bz2 &amp;&amp; cd ./xfce4-dev-tools-4.12.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf xfconf-4.12.0.tar.bz2 &amp;&amp; cd ./xfconf-4.12.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf libxfce4ui-4.12.0.tar.bz2 &amp;&amp; cd ./libxfce4ui-4.12.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf garcon-0.4.0.tar.bz2 &amp;&amp; cd ./garcon-0.4.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf exo-0.10.3.tar.bz2 &amp;&amp; cd ./exo-0.10.3</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf xfce4-panel-4.12.0.tar.bz2 &amp;&amp; cd ./xfce4-panel-4.12.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf Thunar-1.6.6.tar.bz2 &amp;&amp; cd ./Thunar-1.6.6</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>

				<line verbos="yes">tar -xf xfce4-settings-4.12.0.tar.bz2 &amp;&amp; cd ./xfce4-settings-4.12.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf xfce4-session-4.12.0.tar.bz2 &amp;&amp; cd ./xfce4-session-4.12.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf xfwm4-4.12.0.tar.bz2 &amp;&amp; cd ./xfwm4-4.12.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf xfdesktop-4.12.0.tar.bz2 &amp;&amp; cd ./xfdesktop-4.12.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf xfce4-appfinder-4.12.0.tar.bz2 &amp;&amp; cd ./xfce4-appfinder-4.12.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf gtk-xfce-engine-2.10.0.tar.bz2 &amp;&amp; cd ./gtk-xfce-engine-2.10.0</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
				
				<line verbos="yes">tar -xf tumbler-0.1.31.tar.bz2 &amp;&amp; cd ./tumbler-0.1.31</line>
				<line verbos="yes">./configure --prefix=$PROJECT__RFS/usr --disable-debu &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ../</line>
			</action>
		</entry>
	</phase>
	
	
	<phase seq="4" comment="Packaging">
		<entry type="script/bash" seq="1" cdto="no" download="no" extract="no">
			<action when="after" seq="1">
				<line>echo -e "\n\nPackaging root filesystem...\n"</line>

				<line>rm -f $PROJECT__DIR/rootfs.cpio.gz</line>
				<line>cd $PROJECT__RFS</line>
				<line>find . | cpio -R root:root -H newc -o | gzip > $PROJECT__DIR/rootfs.cpio.gz</line>
			</action>
			
			<action when="after" seq="2">
				<line>echo -e "\n\nMaking bootable iso file...\n"</line>

				<line>rm -rf $PROJECT__DIR/isoimage</line>
				<line>mkdir -v $PROJECT__DIR/isoimage</line>
				<line>cd $PROJECT__DIR/isoimage</line>
				<line>
					for i in lib lib64 share end ; do
						if [ -f /usr/$i/syslinux/isolinux.bin ]; then
							cp /usr/$i/syslinux/isolinux.bin .
								if [ -f /usr/$i/syslinux/ldlinux.c32 ]; then
									cp /usr/$i/syslinux/ldlinux.c32 .
								fi;
							break;
						fi;
						if [ $i = end ]; then exit 1; fi;
					done
				</line>
				<line>cp $PROJECT__BLD/linux-4.4.6/arch/$PROJECT__ARCH/boot/bzImage ./kernel.bz</line>
				<line>mv $PROJECT__DIR/rootfs.cpio.gz ./rootfs.gz</line>
				<line>echo 'default kernel.bz initrd=rootfs.gz' > ./isolinux.cfg</line>
				<line>genisoimage -J -r -o $PROJECT__DIR/isoimage/$PROJECT__ISONAME -b isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table ./</line>
				<line>isohybrid $PROJECT__DIR/isoimage/$PROJECT__ISONAME 2>/dev/null || true</line>

				<line>echo -e "\n\n$PROJECT__NAME-$PROJECT__VERSION iso file is created\n$PROJECT__DIR/isoimage/$PROJECT__ISONAME\n"</line>
			</action>
		</entry>
	</phase>
	
</build>
