<?xml version="1.0"?>

<build name="minux" type="live" arch="x86_64" version="0.0.2" codename="Robin">

	<phase seq="1">
		<entry name="linux-4.4.6" type="package/src" seq="1" cdto="yes" download="no" extract="yes">
		    <link>https://www.kernel.org/pub/linux/kernel/v4.x/linux-4.4.6.tar.xz</link>
		    <filename>linux-4.4.6.tar.xz</filename>
		    <version>4.4.6</version>
		    <checksum type="md5">efc822dad2149e40cc908718a4fea1d3</checksum>
            <action when="after" seq="1">
                <line verbos="yes">make mrproper</line>
                <line verbos="yes">make defconfig</line>
                <line>#sed -i "s/.*CONFIG_DEFAULT_HOSTNAME.*/CONFIG_DEFAULT_HOSTNAME=\"$PROJECT__NAME\"/" .config</line>
                <line verbos="yes">make bzImage</line>
                <line verbos="yes">make headers_install</line>
            </action>
		</entry>
		
		<entry name="glibc-2.23" type="package/src" seq="2" cdto="yes" download="no" extract="yes">
		    <link>http://ftp.gnu.org/gnu/glibc/glibc-2.23.tar.bz2</link>
		    <filename>glibc-2.23.tar.bz2</filename>
		    <version>2.23</version>
		    <checksum type="md5">0b1e4a240a01233f310b715a4d92c3be</checksum>
            <action when="after" seq="1">
                <line>mkdir ./glibc_objects</line>
                <line>mkdir ./glibc_installed</line>
                <line>GLIBC_INSTALLED=$(pwd)/glibc_installed</line>
                <line>cd ./glibc_objects</line>
                <line verbos="yes">../configure --prefix= --with-headers=$PROJECT__BLD/linux-4.4.6/usr/include --disable-werror</line>
                <line verbos="yes">make</line>
                <line verbos="yes">make install DESTDIR=$GLIBC_INSTALLED</line>
                
                <line>mkdir -vp $PROJECT__RFS/lib</line>
                
                <line>cp $GLIBC_INSTALLED/lib/ld-linux* $PROJECT__RFS/lib</line>
                <line>cp $GLIBC_INSTALLED/lib/libm.so.6 $PROJECT__RFS/lib</line>
                <line>cp $GLIBC_INSTALLED/lib/libc.so.6 $PROJECT__RFS/lib</line>
                <line>cp $GLIBC_INSTALLED/lib/libresolv.so.2 $PROJECT__RFS/lib</line>
                <line>cp $GLIBC_INSTALLED/lib/libnss_dns.so.2 $PROJECT__RFS/lib</line>
            </action>
		</entry>
		
		<entry name="busybox-1.24.2" type="package/src" seq="3" cdto="yes" download="no" extract="yes">
		    <link>http://busybox.net/downloads/busybox-1.24.2.tar.bz2</link>
		    <filename>busybox-1.24.2.tar.bz2</filename>
		    <version>1.24.2</version>
		    <checksum type="md5">2eaae519cac1143bcf583636a745381f</checksum>
            <action when="after" seq="1">
				<line verbos="yes">make distclean</line>
				<line verbos="yes">make defconfig</line>
				<line>GLIBC_INSTALLED=$(realpath "$PROJECT__BLD/glibc-2.23/glibc_installed")</line>
				<line>#GLIBC_INSTALLED_ESC=$(echo \"$GLIBC_INSTALLED\" | sed 's/\//\\\//g')</line>
				<line verbos="yes">sed -i "s/.*CONFIG_SYSROOT.*/CONFIG_SYSROOT=$GLIBC_INSTALLED/" .config</line>
				<line verbos="yes">sed -i "s/.*CONFIG_INETD.*/CONFIG_INETD=n/" .config</line>
				<line verbos="yes">make busybox</line>
				<line verbos="yes">make install</line>
				
				<line>cp -R _install/ $PROJECT__RFS</line>
				<line>rm -f $PROJECT__RFS/linuxrc</line>
            </action>
		</entry>
	</phase>
	
	<phase seq="2">
	    <entry type="script/bash" seq="1" cdto="no" download="no" extract="no">
            <action when="after" seq="1">
                <line>echo -e "\n\nCreating root filesystem...\n"</line>
                
                <line>GLIBC_INSTALLED="$PROJECT__BLD/glibc-2.23/glibc_installed"</line>
                
                <line>mkdir -v -p $PROJECT__RFS/boot</line>
                <line>mkdir -v -p $PROJECT__RFS/dev</line>
                <line>mkdir -v -p $PROJECT__RFS/etc</line>
                <line>mkdir -v -p $PROJECT__RFS/lib</line>
                <line>mkdir -v -p $PROJECT__RFS/srv</line>
                <line>mkdir -v -p $PROJECT__RFS/proc</line>
                <line>mkdir -v -p $PROJECT__RFS/root</line>
                <line>mkdir -v -p $PROJECT__RFS/home</line>
                <line>mkdir -v -p $PROJECT__RFS/sys</line>
                <line>mkdir -v -p $PROJECT__RFS/mnt</line>
                <line>mkdir -v -p $PROJECT__RFS/media</line>
                <line>mkdir -v -p $PROJECT__RFS/opt</line>
                <line>mkdir -v -p $PROJECT__RFS/tmp</line>
                
                <line>chmod 1777 $PROJECT__RFS/tmp</line>

                <line>cd $PROJECT__RFS/etc</line>
                
                <line>
					cat > bootscript.sh &lt;&lt;-EOF
					#!/bin/sh
					
					dmesg -n 1
					mount -t devtmpfs none /dev
					mount -t proc none /proc
					mount -t sysfs none /sys
					
					for DEVICE in /sys/class/net/* ; do
						ip link set \${DEVICE##*/} up
						[ \${DEVICE##*/} != lo ] &amp;&amp; udhcpc -b -i \${DEVICE##*/} -s /etc/rc.dhcp
					done
					
					EOF
                </line>
                <line>chmod +x bootscript.sh</line>

                <line>
					cat > rc.dhcp &lt;&lt;-EOF
					#!/bin/sh
					
					ip addr add \$ip/\$mask dev \$interface
					
					if [ "\$router" ]; then
					    ip route add default via \$router dev \$interface
					fi
					
					EOF
                </line>
                <line>chmod +x rc.dhcp</line>

                <line>
					cat > resolv.conf &lt;&lt;-EOF
					nameserver 8.8.8.8
					nameserver 8.8.4.4
					
					EOF
                </line>
                <line>
					cat > welcome.txt &lt;&lt;-EOF
					
					##########################################################################
					Welcome to $PROJECT__NAME-$PROJECT__VERSION ($PROJECT__ARCH)
					
					Author: 
					        $PROJECT__AUTHOR_NAME
					        $PROJECT__AUTHOR_EMAIL
					
					Website:
					        $PROJECT__WEBSITE
					##########################################################################
					
					EOF
                </line>
                
                <line>
					cat > inittab &lt;&lt;-EOF
					::sysinit:/etc/bootscript.sh
					::restart:/sbin/init
					::ctrlaltdel:/sbin/reboot
					::once:cat /etc/welcome.txt
					::respawn:/bin/cttyhack /bin/sh
					tty2::once:cat /etc/welcome.txt
					tty2::respawn:/bin/sh
					tty3::once:cat /etc/welcome.txt
					tty3::respawn:/bin/sh
					tty4::once:cat /etc/welcome.txt
					tty4::respawn:/bin/sh
					
					EOF
				</line>
				
                <line>
					cat > $PROJECT__RFS/init &lt;&lt;-EOF
					#!/bin/sh
					
					exec /sbin/init
					
					EOF
				</line>
				<line>chmod +x $PROJECT__RFS/init</line>
				
				<line>cd $PROJECT__RFS</line>
				<line>rm -f ./lib64</line>
				<line>ln -s ./lib ./lib64</line>
            </action>
		</entry>
	</phase>
	
	<phase seq="3">
	    <entry type="script/bash" seq="1" cdto="no" download="no" extract="no">
            <action when="after" seq="1">
                <line>echo -e "\n\nPackaging root filesystem...\n"</line>
                
                <line>rm -f $PROJECT__DIR/rootfs.cpio.gz</line>
                <line>cd $PROJECT__RFS</line>
                <line>find . | cpio -R root:root -H newc -o | gzip > $PROJECT__DIR/rootfs.cpio.gz</line>
            </action>
            
            <action when="after" seq="2">
				<line>echo -e "\n\nMaking bootable iso file...\n"</line>
				
				<line>rm -rf $PROJECT__DIR/isoimage</line>
				<line>mkdir -v $PROJECT__DIR/isoimage</line>
				<line>cd $PROJECT__DIR/isoimage</line>
				<line>
					for i in lib lib64 share end ; do
						if [ -f /usr/$i/syslinux/isolinux.bin ]; then
							cp /usr/$i/syslinux/isolinux.bin .
							if [ -f /usr/$i/syslinux/ldlinux.c32 ]; then
								cp /usr/$i/syslinux/ldlinux.c32 .
							fi;
							break;
						fi;
						if [ $i = end ]; then exit 1; fi;
					done
				</line>
				<line>cp $PROJECT__BLD/linux-4.4.6/arch/$PROJECT__ARCH/boot/bzImage ./kernel.bz</line>
				<line>mv $PROJECT__DIR/rootfs.cpio.gz ./rootfs.gz</line>
				<line>echo 'default kernel.bz initrd=rootfs.gz' > ./isolinux.cfg</line>
				<line>genisoimage -J -r -o $PROJECT__DIR/isoimage/$PROJECT__ISONAME -b isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table ./</line>
				<line>isohybrid $PROJECT__DIR/isoimage/$PROJECT__ISONAME 2>/dev/null || true</line>
				
				<line>echo -e "\n\n$PROJECT__NAME-$PROJECT__VERSION iso file is created\n$PROJECT__DIR/isoimage/$PROJECT__ISONAME\n"</line>
            </action>
       	</entry>
	</phase>
	
</build>

